definitions:
  v1.Address:
    properties:
      city:
        type: string
      country:
        type: string
      district:
        type: string
      postal_code:
        type: integer
    type: object
  v1.CreateUserReqBody:
    properties:
      access_token:
        type: string
      address:
        items:
          $ref: '#/definitions/v1.Address'
        type: array
      bio:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_numbers:
        items:
          type: string
        type: array
      posts:
        items:
          $ref: '#/definitions/v1.Post'
        type: array
      refresh_token:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  v1.EmailVer:
    properties:
      email:
        type: string
      email_code:
        type: string
    type: object
  v1.Media:
    properties:
      id:
        type: string
      link:
        type: string
      type:
        type: string
    type: object
  v1.Post:
    properties:
      description:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/v1.Media'
        type: array
      name:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/users:
    post:
      consumes:
      - application/json
      description: This api uses for creating new user
      parameters:
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      description: This api uses for getting user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get user by id
      tags:
      - users
  /v1/users/all:
    get:
      consumes:
      - application/json
      description: This api uses for getting all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all users
      tags:
      - users
  /v1/users/list:
    get:
      consumes:
      - application/json
      description: This api uses for getting users list
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get users list
      tags:
      - users
  /v1/users/register:
    post:
      consumes:
      - application/json
      description: This api uses for registration new user
      parameters:
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register User
      tags:
      - users
  /v1/users/verification:
    post:
      consumes:
      - application/json
      description: This api uses for sendin email code to user
      parameters:
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.EmailVer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Send Email Code
      tags:
      - users
  /v1/usersupdate/{id}:
    put:
      consumes:
      - application/json
      description: This api uses for updating user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: user body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/v1.CreateUserReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update user by id
      tags:
      - users
swagger: "2.0"
